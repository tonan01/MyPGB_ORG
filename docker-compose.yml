version: '3.8'

services:
  # ====================================================================
  # I. DỊCH VỤ DATABASE (POSTGRESQL)
  # ====================================================================

  db_auth:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: PGB_AuthDb
    volumes:
      - auth_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d PGB_AuthDb"]
      interval: 10s
      timeout: 5s
      retries: 5

  db_todo:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: PGB_TodoDb
    volumes:
      - todo_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d PGB_TodoDb"]
      interval: 10s
      timeout: 5s
      retries: 5

  db_chat:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: PGB_ChatDb
    volumes:
      - chat_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d PGB_ChatDb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ====================================================================
  # II. DỊCH VỤ APIs VÀ GATEWAY
  # ====================================================================
  pgb.auth.api:
    image: tonan01/pgb-auth-api:latest
    build:
      context: .
      dockerfile: PGB.Auth.Api/Dockerfile
    ports:
      - "7001:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: Host=db_auth;Port=5432;Username=user;Password=${POSTGRES_PASSWORD};Database=PGB_AuthDb
      JwtSettings__SecretKey: ${JWT_SECRETKEY}
    depends_on:
      db_auth:
        condition: service_healthy

  pgb.todo.api:
    image: tonan01/pgb-todo-api:latest
    build:
      context: .
      dockerfile: PGB.Todo.Api/Dockerfile
    ports:
      - "7002:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: Host=db_todo;Port=5432;Username=user;Password=${POSTGRES_PASSWORD};Database=PGB_TodoDb
    depends_on:
      db_todo:
        condition: service_healthy

  pgb.chat.api:
    image: tonan01/pgb-chat-api:latest
    build:
      context: .
      dockerfile: PGB.Chat.Api/Dockerfile
    ports:
      - "7003:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: Host=db_chat;Port=5432;Username=user;Password=${POSTGRES_PASSWORD};Database=PGB_ChatDb
      OpenAI__ApiKey: ${OPENAI_APIKEY}
    depends_on:
      db_chat:
        condition: service_healthy

  pgb.apigateway:
    image: tonan01/pgb-apigateway:latest
    build:
      context: .
      dockerfile: PGB.ApiGateway/Dockerfile
    ports:
      - "7000:8080" # API GATEWAY MÁY HOST
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      JwtSettings__SecretKey: ${JWT_SECRETKEY}
      JwtSettings__Issuer: PGB_ORG
      JwtSettings__Audience: PGB_ORG_Users
    depends_on:
      - pgb.auth.api
      - pgb.todo.api
      - pgb.chat.api

  # ====================================================================
  # III. DỊCH VỤ FRONTEND
  # ====================================================================
  pgb.frontend:
    image: tonan01/pgb-frontend:latest
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80" # TRUY CẬP FRONTEND TẠI http://localhost:5173
    depends_on:
      - pgb.apigateway

# ====================================================================
# IV. VOLUMES
# ====================================================================
volumes:
  auth_data:
  todo_data:
  chat_data: